// –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API
const TelegramBot = require('node-telegram-bot-api');
// –ü–æ–¥–∫–ª—é—á–∞–µ–º express –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
const express = require('express');
// –ü–æ–¥–∫–ª—é—á–∞–µ–º dotenv –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config();

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
const TOKEN = process.env.TOKEN;
// –ü–æ–ª—É—á–∞–µ–º URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
const WEB_APP_URL = process.env.WEB_APP_URL;
// –£–∫–∞–∑—ã–≤–∞–µ–º –≤–Ω–µ—à–Ω–∏–π URL –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (–¥–æ–º–µ–Ω –∏–ª–∏ IP —Å –ø–æ—Ä—Ç–æ–º)
const SERVER_URL = process.env.SERVER_URL;
// –ó–∞–¥–∞–µ–º –ø–æ—Ä—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å–µ—Ä–≤–µ—Ä –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
const PORT = process.env.PORT;
// –ü–æ–ª—É—á–∞–µ–º –∏–º—è –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
const BOT_USERNAME = process.env.BOT_USERNAME;

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Express-—Å–µ—Ä–≤–µ—Ä–∞
const app = express();
// –£–∫–∞–∑—ã–≤–∞–µ–º Express –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å JSON-–∑–∞–ø—Ä–æ—Å—ã –æ—Ç Telegram
app.use(express.json());

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ (–±–µ–∑ –ø–æ–ª–ª–∏–Ω–≥–∞, —Ç–∞–∫ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–µ–±—Ö—É–∫–∏)
const bot = new TelegramBot(TOKEN);

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram
app.post(`/bot${TOKEN}`, (req, res) => {
  // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–æ—Ç—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
  bot.processUpdate(req.body);
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Telegram –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ (200 OK)
  res.sendStatus(200);
});

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –µ—Å—Ç—å –ª–∏ –±–æ—Ç –≤ –≥—Ä—É–ø–ø–µ
async function isBotInChat(chatId) {
  try {
    const chatMember = await bot.getChatMember(chatId, bot.botInfo.id);
    return chatMember.status !== 'kicked' && chatMember.status !== 'left';
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ:', error);
    return false;
  }
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
bot.on('message', async (msg) => {
  // –ò–∑–≤–ª–µ–∫–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
  const chatId = msg.chat.id;
  // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
  const text = msg.text;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –±–æ—Ç –≤ –≥—Ä—É–ø–ø–µ
  if (msg.chat.type === 'group' || msg.chat.type === 'supergroup') {
    const inChat = await isBotInChat(chatId);
    if (!inChat) {
      console.log('–ë–æ—Ç –∏—Å–∫–ª—é—á—ë–Ω –∏–∑ –≥—Ä—É–ø–ø—ã, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.');
      return;
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—É /start
  if (text === '/start') {
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
      await bot.sendMessage(chatId, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–æ–ø —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–≤!', {
        reply_markup: {
          inline_keyboard: [
            // –ö–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º "–ú–∏–Ω–∏-–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" –∏ —Å—Å—ã–ª–∫–æ–π –Ω–∞ Web App
            [{ text: '–ú–∏–Ω–∏-–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', web_app: { url: WEB_APP_URL } }]
          ]
        }
      });
    } catch (error) {
      // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }
  }
  // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≥—Ä—É–ø–ø –∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø
  else if (msg.chat.type === 'group' || msg.chat.type === 'supergroup') {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±–æ—Ç–∞
    if (text.includes(`@${BOT_USERNAME}`)) {
      try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ
        await bot.sendMessage(chatId, '–Ø –∑–¥–µ—Å—å! –ö–∞–∫ –º–æ–≥—É –ø–æ–º–æ—á—å? ü§ñ');
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ:', error);
      }
    }
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
      await bot.sendMessage(chatId, '–Ø —Ä–∞–±–æ—Ç–∞—é –∏ –≤ –≥—Ä—É–ø–ø–∞—Ö!');
    } catch (error) {
      // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –≥—Ä—É–ø–ø
      console.error('–û—à–∏–±–∫–∞ –≤ –≥—Ä—É–ø–ø–µ:', error);
    }
  }
});

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
bot.setWebHook(`${SERVER_URL}/bot${TOKEN}`).then(() => {
  // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤–µ–±—Ö—É–∫–∞
  console.log(`–í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${SERVER_URL}/bot${TOKEN}`);
}).catch((error) => {
  // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞
  console.error('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞:', error);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—Ç—É
app.listen(PORT, () => {
  // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
